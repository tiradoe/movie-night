{% extends "base" %}
{% block content %}

<div id="movie-list"></div>

<script>

    let getMovies = async function () {
        let list_id = window.location.pathname.split('/').pop();

        return fetch("/api/lists/" + list_id, {
            method: "GET",
            headers: {"Content-type": "application/json"}
        })
            .then(response => response.json())
            .then(json => {
                return json
            })
            .catch(err => console.log(err))
    }

    getMovies().then((list) => {
        lemonade.render(MovieList(list), document.getElementById('movie-list'));
        new LazyLoad();

        if (mn.getToken() !== "") {
            let delete_buttons = document.querySelectorAll(".delete-button");
            [...delete_buttons].forEach(delete_button => delete_button.classList.toggle("visually-hidden"));
        }
    });

    const MovieList = function (data) {
        let self = {};
        self.list = data.list;
        self.movies = data.movies;
        self.filtered_movies = self.movies;

        self.methods = {

            "filterMovies": function (input) {
                if (!input) {
                    self.filtered_movies = self.movies;
                    return;
                }

                self.filtered_movies = self.movies.filter(movie => {
                    return movie.title.toLowerCase()
                        .search(input.toLowerCase()) > -1
                });
            },
            "deleteMovie": function (list_id, movie_id) {
                let confirmed = confirm("Remove movie from list?");

                if (!confirmed) {
                    return false;
                }

                return fetch("/api/movies/l/" + list_id + "/m/" + movie_id, {
                    method: "DELETE",
                    headers: {"Content-type": "application/json", "token": mn.getToken()}
                })
                    .then(response => response.json())
                    .then(_json => {
                        self.filtered_movies = self.filtered_movies.filter((movie) => {
                            return movie.id !== movie_id
                        })
                    })
                    .catch(err => console.log(err));
            },
            "showModal": function (movie) {
                lemonade.render(Modal(movie), document.getElementById('movie-list'));
                if (mn.getToken() !== "") {
                    document.getElementById("schedule-form").classList.remove("visually-hidden");
                }
            }
        };

        let template = `
            <div>
            {% raw %}
            <div class="mx-1 mx-sm-0 list-header row pb-3 sticky-top pt-2">
                <h4 class="col-sm-8 p-0">{{self.list.name}}</h4>
                <input oninput="self.methods.filterMovies(this.value)" placeholder="Filter Movies" class="text-end col-sm-4 p-1 " type="text" />
            </div>
            <ul class="mx-1 mx-sm-0 row p-0" @loop="self.filtered_movies">
                <li class="card col-6 col-md-4 col-lg-3 mb-3 movie-card neon-border">
                    <div class="card-body row">
                        <!-- POSTER -->
                        <img
                            alt="movie poster"
                            onclick="self.parent.methods.showModal(self)"
                            class="lazy card-img movie-poster hover-pointer"
                            data-src="{{self.poster}}"
                         />
                        <div class="h-auto row pt-5 mb-3">
                            <!-- TITLE -->
                            <span class="card-title fw-bold">{{self.title}}</span>
                        </div>
                            <span onclick="self.parent.methods.deleteMovie(self.parent.list.id, self.id)" class="text-center delete-button visually-hidden">
                                X
                            </span>
                    </div>
                </li>
            </ul>
            {% endraw %}
            </div>
        `;
        return lemonade.element(template, self)
    }

    const Modal = function (movie) {
        let self = {};
        self.movie = movie

        self.methods = {
            "schedule": function (id) {
                let showtime_input = document.querySelector(`[data-movie-id="${id}"]`).value
                if (!showtime_input) {
                    alert("Please set showtime.");
                    return false;
                }
                let showtime = showtime_input + " " + "00:00:00";

                fetch("/api/schedules/movie", {
                    method: "POST",
                    body: JSON.stringify({
                        "schedule_id": 1,
                        "movie_id": id,
                        "showtime": showtime,
                        "owner": 1,
                        "public": false
                    }),
                    headers: {"Content-type": "application/json", "token": mn.getToken()}
                })
                    .then(response => response.json())
                    .then(_json => alert("Movie scheduled!"))
                    .catch(err => alert("Unable to schedule movie. Error:\n" + err))
            },
            "closeModal": function () {
                document.getElementById("movie-modal").remove();
            },
        }

        let template = `
            <div id="movie-modal" class="movie-modal movie-card">
                <span class="close-button fw-bold pe-3 pt-3 pe-sm-5 pt-sm-5 position-absolute end-0" onclick="self.methods.closeModal()">X</span>
                <div class="p-5 container rounded movie-modal-content neon-border">
                        <div class="row">
                            <div class="col-sm-6">
                               {%raw%}
                                <h2 class="pb-5" id="modal-title">{{self.movie.title}}</h2>
                               <p class="pb-5">{{self.movie.plot}}</p>
                               {%endraw%}
                           <!-- PLOT -->
                           <form id="schedule-form" class="row mt-auto mx-auto visually-hidden" method="post" onsubmit="return false">
                               <!-- SCHEDULE -->
                               <div class="row mt-auto mx-0 px-0">
                                   <label class="text-start col-sm-3 px-0 mx-0 fw-bold" for="schedule-date">Date</label><br/>

                               {%raw%}
                                   <input class="col-sm-12 p-1 mx-0 schedule-date" data-movie-id="{{self.movie.id}}" name="schedule-date" type="date"/>
                               {%endraw%}
                               </div>
                               {%raw%}
                               <button onclick="self.methods.schedule(self.movie.id)" type="button" class="btn">Schedule</button>
                               {%endraw%}
                           </form>
                            </div>
                            <!-- MODAL POSTER -->
                            <div class="col-sm-6 text-end">
                               {%raw%}
                                <img alt="poster" class="col-sm-6 d-none d-sm-inline-flex" id="modal-poster" src="{{self.movie.poster}}"/>
                               {%endraw%}
                            </div>
                        </div>
                </div>
            </div>
        `

        return lemonade.element(template, self)
    }
</script>
{% endblock content %}
